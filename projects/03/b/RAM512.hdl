// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[6..8],a=dmuxout0,b=dmuxout1,c=dmuxout2,d=dmuxout3,e=dmuxout4,f=dmuxout5,g=dmuxout6,h=dmuxout7);

    RAM64(in=in, load=dmuxout0, address=address[0..5], out=ramout0);
    RAM64(in=in, load=dmuxout1, address=address[0..5], out=ramout1);
    RAM64(in=in, load=dmuxout2, address=address[0..5], out=ramout2);
    RAM64(in=in, load=dmuxout3, address=address[0..5], out=ramout3);
    RAM64(in=in, load=dmuxout4, address=address[0..5], out=ramout4);
    RAM64(in=in, load=dmuxout5, address=address[0..5], out=ramout5);
    RAM64(in=in, load=dmuxout6, address=address[0..5], out=ramout6);
    RAM64(in=in, load=dmuxout7, address=address[0..5], out=ramout7);

    Mux8Way16(a=ramout0, b=ramout1, c=ramout2, d=ramout3, e=ramout4, f=ramout5, g=ramout6, h=ramout7, sel=address[6..8], out=out);
}