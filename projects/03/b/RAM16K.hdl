// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load,sel=address[12..13],a=dmuxout0,b=dmuxout1,c=dmuxout2,d=dmuxout3);

    RAM4K(in=in, load=dmuxout0, address=address[0..11], out=ramout0);
    RAM4K(in=in, load=dmuxout1, address=address[0..11], out=ramout1);
    RAM4K(in=in, load=dmuxout2, address=address[0..11], out=ramout2);
    RAM4K(in=in, load=dmuxout3, address=address[0..11], out=ramout3);

    Mux4Way16(a=ramout0, b=ramout1, c=ramout2, d=ramout3, sel=address[12..13], out=out);
}